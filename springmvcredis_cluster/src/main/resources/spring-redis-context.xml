<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd">
    <description>redis 相关类 Spring 托管</description>

    <!--载入 redis 配置文件-->
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>

    <bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">  
				<property name="maxRedirects" value="${redis.maxRedirects}"></property>  
				<property name="clusterNodes">  
					<set>  
						<bean class="org.springframework.data.redis.connection.RedisNode">  
							<constructor-arg name="host" value="${redis.host1}"></constructor-arg>  
							<constructor-arg name="port" value="${redis.port1}"></constructor-arg>  
						</bean>  
						<bean class="org.springframework.data.redis.connection.RedisNode">  
							<constructor-arg name="host" value="${redis.host2}"></constructor-arg>  
							<constructor-arg name="port" value="${redis.port2}"></constructor-arg>  
						</bean>  
						<bean class="org.springframework.data.redis.connection.RedisNode">  
							<constructor-arg name="host" value="${redis.host3}"></constructor-arg>  
							<constructor-arg name="port" value="${redis.port3}"></constructor-arg>  
						</bean>  
						<bean class="org.springframework.data.redis.connection.RedisNode">  
							<constructor-arg name="host" value="${redis.host4}"></constructor-arg>  
							<constructor-arg name="port" value="${redis.port4}"></constructor-arg>  
						</bean>  
						<bean class="org.springframework.data.redis.connection.RedisNode">  
							<constructor-arg name="host" value="${redis.host5}"></constructor-arg>  
							<constructor-arg name="port" value="${redis.port5}"></constructor-arg>  
						</bean>  
						<bean class="org.springframework.data.redis.connection.RedisNode">  
							<constructor-arg name="host" value="${redis.host6}"></constructor-arg>  
							<constructor-arg name="port" value="${redis.port6}"></constructor-arg>  
						</bean>  
				</set>  
		</property>  
	</bean>  
	
	
	   
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  >  
		
		 <property name="poolConfig" ref="poolConfig" />
		 <constructor-arg name="clusterConfig" ref="redisClusterConfiguration"/>  
        <constructor-arg name="poolConfig" ref="poolConfig"/>   
		<!-- <property name="timeout" value="${redis.timeout}" /> -->
	</bean> 


    <!-- 配置 JedisPoolConfig 实例 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>
    
    
    <!-- 配置JedisConnectionFactory 
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value=""/>
        <property name="database" value="0"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>
    -->

    <!-- 配置RedisTemplate -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
        </property>
    </bean>

    <!-- 配置RedisCacheManager -->
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg name="redisOperations" ref="redisTemplate"/>
        <property name="defaultExpiration" value="3000"/>
        <property name="expires">
			<map>
				<entry key="account" value="60" />
			</map>
		</property>
    </bean>

    <!-- 配置RedisCacheConfig -->
    <bean id="redisCacheConfig" class="com.nf.RedisCacheConfig">
        <constructor-arg ref="jedisConnectionFactory"/>
        <constructor-arg ref="redisTemplate"/>
        <constructor-arg ref="redisCacheManager"/>
    </bean>
</beans>